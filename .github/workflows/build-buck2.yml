name: buck2

on:
  push:
    branches:
      - main
  pull_request:

permissions: read-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            abi: x86_64-unknown-linux-gnu
          - os: windows-latest
            abi: x86_64-pc-windows-msvc
          - os: macos-latest
            abi: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15 # NOTE (aseipp): keep in-sync with the build.yml timeout limit

    name: build buck2 binaries
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      - name: Install DotSlash
        uses: ./.github/actions/install-dotslash
      # FIXME (aseipp): use 'buck2' out of `$PATH` after we have dotslash .exe
      # shim files for windows. until then just invoke manually
      - name: buck2 build ...
        shell: bash
        run: |
          mkdir -p out
          # run the build, and if it fails, still stash the log in out, then propagate the error
          # we use 'if' so that the error so that the script doesn't fail if the build fails
          if ! dotslash ./buck/bin/buck2 build @mode//debug //:bucktools --out out; then
            mv buck-out/v2/log/*.pb.zst out
            exit 1
          else
            mv buck-out/v2/log/*.pb.zst out
          fi

      - name: buck2 test ...
        shell: bash
        run: |
          dotslash ./buck/bin/buck2 test @mode//debug third-party//... root//...
          mv buck-out/v2/log/*.pb.zst out

      - name: "Upload artifact"
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
        with:
          name: bucktools-${{ matrix.abi }}
          path: out
          retention-days: 14
